# Test file for URL/URI values in .npmrc format

# Basic URLs
registry=https://registry.npmjs.org
proxy=http://proxy.company.com:8080
repository=git+https://github.com/user/repo.git

# Scoped registries with URLs
@mycompany:registry=https://npm.company.com
@another:registry=https://packages.another.com/npm/

# URL-style keys (npmrc specific)
//registry.npmjs.org/:_authToken=npm_token_here
//npm.company.com/:_authToken=${NPM_TOKEN}
//packages.github.com/:_password=base64_encoded_password

# Various URI schemes
git_url=git://github.com/user/repo.git
ssh_url=ssh://user@server.com:22/path/to/repo
ftp_url=ftp://ftp.example.com/files/document.pdf
file_url=file:///home/user/documents/
mailto_url=mailto:user@example.com
data_url=data:text/plain;base64,SGVsbG8gV29ybGQ=

# Complex URLs with query parameters
api_endpoint=https://api.example.com/v1/users?page=1&limit=10
oauth_callback=https://app.com/auth/callback?code=abc123&state=xyz

# Edge cases
url_with_port=https://example.com:3000/path
url_with_auth=https://user:pass@example.com/secure
url_with_fragment=https://docs.example.com/api#section-auth
protocol_only=https://
incomplete_url=http://

# Non-URL values for comparison
not_a_url=just-some-text
email_not_url=user@example.com
path_not_url=/usr/local/bin